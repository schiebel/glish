AC_INIT(glish)

AC_DEFUN(HAVE_AIX,
[AC_BEFORE([$0], [AC_TRY_COMPILE])dnl
AC_BEFORE([$0], [AC_TRY_LINK])dnl
AC_BEFORE([$0], [AC_TRY_RUN])dnl
AC_MSG_CHECKING(for AIX)
AC_EGREP_CPP(yes,
[#ifdef _AIX
  yes
#endif
], [AC_MSG_RESULT(yes); AC_DEFINE(_ALL_SOURCE)
AIX=1], [AC_MSG_RESULT(no)
AIX=])])

if test -z "$GLISHROOT"; then
   if test "x$prefix" = xNONE; then
       GLISHROOT="`pwd`"
    else
       GLISHROOT="$prefix"
    fi
fi
AC_SUBST(GLISHROOT)

if test -z "$NO_AUTH" && test -d npd && test -f npd/config.h.in; then
    GLISH_FLAGS="$GLISH_FLAGS -DAUTHENTICATE"
    NPD_LIB="$(LIBDIR)/libnpd.a"
    GLISH_NPD="GLISH_NPD"
    AC_CONFIG_HEADER(glish/$ARCH/config.h:glish/config.h.in glish/$ARCH/config_p.h:glish/config_p.h.in glish/clients/$ARCH/config.h:glish/config.h.in npd/$ARCH/config.h:npd/config.h.in editline/$ARCH/config.h:editline/config.h.in)
    if test -z "$KEYDIR"; then
        KEYDIR="$GLISHROOT/keys"
    fi
    AC_SUBST(KEYDIR)
    if test ! -d $KEYDIR/hosts; then
        config/mkhier "$KEYDIR/hosts"
        chmod -f 750 "$KEYDIR/hosts"
    fi
    if test ! -d $KEYDIR/users; then
        config/mkhier "$KEYDIR/users"
        chmod -f 770 "$KEYDIR/users"
    fi
else
    GLISH_NPD=""
    NPD_LIB=""
    AC_CONFIG_HEADER(glish/$ARCH/config.h:glish/config.h.in glish/$ARCH/config_p.h:glish/config_p.h.in glish/clients/$ARCH/config.h:glish/config.h.in)
fi
AC_SUBST(NPD_LIB)
    
dnl Checks for programs.
AC_PROG_CC
HAVE_AIX
AC_C_CONST
AC_PROG_CXX
AC_DEFUN(AC_INSTALL_CACHE_VAL,ac_cv_path_install_glish)
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_YACC
AC_CHECK_PROG(RSH,remsh,remsh,rsh)

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(libc.h sys/filio.h X11/fd.h sys/select.h sigLib.h unistd.h)
AC_CHECK_HEADERS(sys/signal.h vfork.h)
AC_CHECK_HEADERS(sys/time.h)
AC_CHECK_HEADERS(stdlib.h)
AC_CHECK_HEADERS(dirent.h termio.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_CHECK_TYPE(malloc_t,void*)

dnl Checks for library functions.
AC_CHECK_LIB(bsd, main)
AC_CHECK_LIB(socket, main)
AC_CHECK_LIB(inet, main)
AC_CHECK_LIB(nsl, main)
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_FUNC_VFORK
AC_CHECK_FUNC(random,AC_DEFINE(HAVE_RANDOM))
AC_CHECK_FUNC(lrand48,AC_DEFINE(HAVE_LRAND48))
AC_CHECK_FUNC(flock,AC_DEFINE(HAVE_FLOCK))
AC_CHECK_FUNC(lockf,AC_DEFINE(HAVE_LOCKF))
AC_CHECK_FUNCS(gethostname setrlimit waitpid strdup setsockopt)
AC_CHECK_FUNCS(sigprocmask uname)
AC_CHECK_FUNCS(tcgetattr)

if test -z "$NO_TK" && test -d rivet && test -f rivet/configure; then
    #--------------------------------------------------------------------
    #	Stolen from the Tk configure.in...
    #
    #	Locate the X11 header files and the X11 library archive.  Try
    #	the ac_path_x macro first, but if it doesn't find the X stuff
    #	(e.g. because there's no xmkmf program) then check through
    #	a list of possible directories.  Under some conditions the
    #	autoconf macro will return an include directory that contains
    #	no include files, so double-check its result just to be safe.
    #--------------------------------------------------------------------
    AC_PATH_X
    not_really_there=""
    if test "$no_x" = ""; then
        if test "$x_includes" = ""; then
    	AC_TRY_CPP([#include <X11/XIntrinsic.h>], , not_really_there="yes")
        else
    	if test ! -r $x_includes/X11/Intrinsic.h; then
    	    not_really_there="yes"
    	fi
        fi
    fi
    
    if test "$no_x" = "yes" -o "$not_really_there" = "yes"; then
        echo checking for X11 header files
        XINCLUDES="# no special path needed"
        AC_TRY_CPP([#include <X11/Intrinsic.h>], , XINCLUDES="nope")
        if test "$XINCLUDES" = nope; then
            dirs="/usr/unsupported/include /usr/local/include /usr/X386/include /usr/include/X11R4 /usr/X11R5/include /usr/include/X11R5 /usr/openwin/include /usr/X11/include /usr/sww/include"
            for i in $dirs ; do
    	    if test -r $i/X11/Intrinsic.h; then
    	        XINCLUDES=" -I$i"
    	    fi
            done
        fi
    else
        if test "$x_includes" != ""; then
    	XINCLUDES=-I$x_includes
        else
    	XINCLUDES="# no special path needed"
        fi
    fi
    if test "$XINCLUDES" = nope; then
      echo "Warning:  couldn't find any X11 include files."
      XINCLUDES="# no include files found"
    fi
    
    if test "$no_x" = yes; then
        XLIBSW=nope
        if test "$XLIBSW" = nope; then
    	dirs="/usr/unsupported/lib /usr/local/lib /usr/X386/lib /usr/lib/X11R4 /usr/X11R5/lib /usr/lib/X11R5 /usr/openwin/lib /usr/X11/lib /usr/sww/X11/lib"
    	for i in $dirs ; do
    	    if test -r $i/libX11.a; then
    		XLIBSW="-L$i -lX11"
    	    fi
    	done
        fi
    else
        if test "$x_libraries" = ""; then
    	XLIBSW=-lX11
        else
    	XLIBSW="-L$x_libraries -lX11"
        fi
    fi
    if test "$XLIBSW" = nope ; then
        AC_CHECK_LIB(Xwindow, XCreateWindow, XLIBSW=-lXwindow)
    fi
    if test "$XLIBSW" = nope ; then
        echo "Warning:  couldn't find the X11 library archive.  Using -lX11."
        XLIBSW=-lX11
    fi
    #--------------------------------------------------------------------
    GLISH_FLAGS="$GLISH_FLAGS -DGLISHTK"
    GLISH_INCL="$GLISH_INCL -I../../include/Rivet"
    GLISH_LIB="$GLISH_LIB -L../../rivet/rivet -lrivet"
    GLISH_TK="GLISH_TK"

    #------propagate the hostname on down--------------------------------
    ac_configure_args="$ac_configure_args --host=$ARCH"
    AC_CONFIG_SUBDIRS( rivet )
else
    XLIBSW=""
    XINCLUDES=""
    GLISH_TK=""
fi


#--------------------------------------------------------------------
#	Stolen from the Tk configure.in...
#
#       The code below deals with several issues related to gettimeofday:
#       1. Some systems don't provide a gettimeofday function at all
#          (set NO_GETTOD if this is the case).
#       2. SGI systems don't use the BSD form of the gettimeofday function,
#          but they have a BSDgettimeofday function that can be used instead.
#       3. See if gettimeofday is declared in the <sys/time.h> header file.
#          if not, set the GETTOD_NOT_DECLARED flag so that tclPort.h can
#          declare it.
#--------------------------------------------------------------------
AC_CHECK_FUNC(BSDgettimeofday, AC_DEFINE(HAVE_BSDGETTIMEOFDAY),
        AC_CHECK_FUNC(gettimeofday, , AC_DEFINE(NO_GETTOD)))
AC_MSG_CHECKING([for gettimeofday declaration])
AC_EGREP_HEADER(gettimeofday, sys/time.h, AC_MSG_RESULT(present), [
    AC_MSG_RESULT(missing)
    AC_DEFINE(GETTOD_NOT_DECLARED)
])

##
##  Add in AIX flags
##
if test "$AIX"; then
    CFLAGS="$CFLAGS -D_ALL_SOURCE"
    CXXFLAGS="$CXXFLAGS -D_ALL_SOURCE"
fi

##
## Check on a few C++ issues
##
AC_MSG_CHECKING(c++ 'for' scope)
AC_LANG_CPLUSPLUS
AC_TRY_COMPILE(,[
for ( int i=0; i < 1; i++ ) { ; }
for ( int i=0; i < 1; i++ ) { ; }
],[AC_MSG_RESULT(local); AC_DEFINE(LOOPDECL,int)],
[AC_MSG_RESULT(non-local); AC_DEFINE(LOOPDECL,)])
AC_LANG_C

AC_SUBST(XINCLUDES)
AC_SUBST(XLIBSW)
AC_SUBST(GLISH_FLAGS)
AC_SUBST(GLISH_INCL)
AC_SUBST(GLISH_LIB)
AC_SUBST(GLISH_TK)
AC_SUBST(GLISH_NPD)
AC_SUBST(LOOPDECL)

AC_OUTPUT($ARCH/glish.options:config/glish.options.in npd/$ARCH/Makefile:npd/Makefile.in sds/$ARCH/Makefile:sds/Makefile.in editline/$ARCH/Makefile:editline/Makefile.in glish/$ARCH/Makefile:glish/Makefile.in glish/clients/$ARCH/Makefile:glish/clients/Makefile.in)
