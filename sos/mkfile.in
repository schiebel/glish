## $Id$
##
## Makefile for sos library.
##

INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@

#IF DYNAMIC
MK_LIB = @MAKE_SLIB@
LD_LIBS = @SLIB_LD_LIBS@
CFLAGS = @CFLAGS@ @SLIB_CFLAGS@
CXXFLAGS = @CXXFLAGS@ @SLIB_CXXFLAGS@
LIB_SUFFIX = @GLISH_SLIB_SUFFIX@
RANLIB = :
LIBTGT = @DYNAMIC_LIB@
INSTALL_LIBTGT = INSTALL_@DYNAMIC_LIB@
INSTALL_LIBRARY = $(INSTALL_PROGRAM)
#ELSE
MK_LIB = @MAKE_LIB@
LD_LIBS = 
CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@
LIB_SUFFIX = @GLISH_LIB_SUFFIX@
RANLIB = @RANLIB@
LIBTGT = @STATIC_LIB@
INSTALL_LIBTGT = INSTALL_@STATIC_LIB@
INSTALL_LIBRARY = $(INSTALL_DATA)
#FI

CC = @CC@
CPLUS = @CXX@
LIBS = @LIBS@

D = @DOT@
T = @TOUCH_PROXY@
MINSPACE_RM = @MINSPACE_RM@

SHELL = /bin/sh
SH = $(SHELL)

RM = rm -f

SRC = ../..
H = $(SRC)/include/sos
SDSINC = -I$(SRC)/include

top = @top_srcdir@@top_off@
INCDIR_P = $(top)/include
LIBDIR_P = $(top)/lib/$(ARCH)

prefix = @prefix@
exec_prefix = @exec_prefix@
INCDIR = @includedir@
LIBDIR = @libdir@

MKHIER = $(top)/config/mkhier

INCLUDE = -I.. -I$(SRC) -I$(SRC)/include -I$(INCDIR)

OBJS = convert.o header.o io.o longint.o types.o list.o
OBJS_PROXY = $(D)convert.o $(D)header.o $(D)io.o $(D)longint.o \
	$(D)types.o $(D)list.o

HDRS = $(H)/io.h $(H)/sos.h $(H)/types.h \
	$(H)/header.h $(H)/mdep.h $(H)/list.h $(H)/generic.h

HDRS_P = $(INCDIR_P)/sos/io.h $(INCDIR_P)/sos/sos.h $(INCDIR_P)/sos/types.h \
	$(INCDIR_P)/sos/header.h $(INCDIR_P)/sos/mdep.h \
	$(INCDIR_P)/sos/list.h $(INCDIR_P)/sos/generic.h

TAR_FILE = sos.tar

all: $(LIBTGT)

install: $(INSTALL_LIBTGT)

lib_tgt: $(LIBDIR_P)/libsos$(LIB_SUFFIX) $(HDRS_P)

INSTALL_lib_tgt: $(LIBDIR)/libsos$(LIB_SUFFIX)
	$(MKHIER) $(INCDIR)/sos
	@rm -f $(INCDIR)/sos/*.h
	cp $(HDRS) $(INCDIR)/sos

libs: libsos$(LIB_SUFFIX)

libsos$(LIB_SUFFIX): $(OBJS_PROXY)
	$(RM) libsos$(LIB_SUFFIX)
	$(MK_LIB) libsos$(LIB_SUFFIX) $(OBJS) $(LD_LIBS)
	$(RANLIB) libsos$(LIB_SUFFIX)
	$(MINSPACE_RM) $(OBJS)

$(LIBDIR_P)/libsos$(LIB_SUFFIX): libsos$(LIB_SUFFIX)
	$(MKHIER) $(LIBDIR_P)
	$(MKHIER) $(INCDIR_P)/sos
	$(INSTALL_LIBRARY) libsos$(LIB_SUFFIX) $(LIBDIR_P)
	$(RANLIB) $(LIBDIR_P)/libsos$(LIB_SUFFIX)

$(LIBDIR)/libsos$(LIB_SUFFIX): libsos$(LIB_SUFFIX)
	$(MKHIER) $(LIBDIR)
	$(INSTALL_LIBRARY) libsos$(LIB_SUFFIX) $(LIBDIR)
	$(RANLIB) $(LIBDIR)/libsos$(LIB_SUFFIX)

tar:
	@rm -f $(TAR_FILE).Z tar-files
	@$(MAKE) $(MFLAGS) tar-list >tar-files
	tar cf $(TAR_FILE) -I tar-files
	compress $(TAR_FILE)
	@rm -f tar-files

tar-list:
	@echo sds >&2
	@ls Makefile.in *.cc include/Sds/*.h Doc/*

rcsinfo:
	@echo sds
	@rlog -L RCS/*,v | sed -n -e 's/Working file://p' -e 's/locked by//p'
	@echo sds/include/Sds
	@cd include/Sds;rlog -L RCS/*,v | sed -n -e 's/Working file://p' -e 's/locked by//p'

clean:
	@rm -f errs $(OBJS_PROXY) *.o *~* $(APPS) core a.out *$(LIB_SUFFIX) ../$(TAR_FILE).Z

distclean: clean
	rm -f config.status config.cache config.h Makefile

$(D)convert.o: $(SRC)/convert.cc $(SRC)/convert.h $(SRC)/longint.h $(H)/sos.h
	$(CPLUS) $(INCLUDE) $(CXXFLAGS) -c $(SRC)/convert.cc $(T)

$(D)header.o: $(SRC)/header.cc $(H)/header.h $(H)/mdep.h $(H)/types.h $(H)/sos.h
	$(CPLUS) $(INCLUDE) $(CXXFLAGS) -c $(SRC)/header.cc $(T)

$(D)io.o: $(SRC)/io.cc $(H)/io.h $(H)/header.h $(H)/mdep.h $(H)/types.h $(SRC)/convert.h $(SRC)/longint.h $(H)/sos.h
	$(CPLUS) $(INCLUDE) $(CXXFLAGS) -c $(SRC)/io.cc $(T)

$(D)longint.o: $(SRC)/longint.cc $(SRC)/longint.h $(H)/sos.h
	$(CPLUS) $(INCLUDE) $(CXXFLAGS) -c $(SRC)/longint.cc $(T)

$(D)types.o: $(SRC)/types.cc $(H)/types.h $(H)/mdep.h $(H)/sos.h
	$(CPLUS) $(INCLUDE) $(CXXFLAGS) -c $(SRC)/types.cc $(T)

$(D)list.o: $(SRC)/list.cc $(H)/list.h $(H)/sos.h $(H)/generic.h
	$(CPLUS) $(INCLUDE) $(CXXFLAGS) -c $(SRC)/list.cc $(T)

##
## Include files
##
$(INCDIR_P)/sos/io.h: $(H)/io.h
	rm -f $@ 
	cp $(H)/io.h $@

$(INCDIR_P)/sos/sos.h: $(H)/sos.h
	rm -f $@ 
	cp $(H)/sos.h $@

$(INCDIR_P)/sos/types.h: $(H)/types.h
	rm -f $@ 
	cp $(H)/types.h $@

$(INCDIR_P)/sos/header.h: $(H)/header.h
	rm -f $@ 
	cp $(H)/header.h $@

$(INCDIR_P)/sos/mdep.h: $(H)/mdep.h
	rm -f $@ 
	cp $(H)/mdep.h $@

$(INCDIR_P)/sos/list.h: $(H)/list.h
	rm -f $@ 
	cp $(H)/list.h $@

$(INCDIR_P)/sos/generic.h: $(H)/generic.h
	rm -f $@ 
	cp $(H)/generic.h $@

INSTALL_:

