## $Id$
## Copyright (c) 1998 Associated Universities Inc.
##
## Makefile for gtk
##

SUFFIX = @GLISH_SLIB_SUFFIX@
MK_LIB = @MAKE_SLIB@
TK_LIB = @TK_LIB@
CLIENT_LIBS = @TKCLIENT_LIBS@

CFLAGS = @TK_FLAGS@ @CFLAGS@
CXXFLAGS = @TK_FLAGS@ @CXXFLAGS@
LIB_SUFFIX = @GLISH_LIB_SUFFIX@

CC = @CC@
CPLUS = @CXX@
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

SHELL = /bin/sh
SH = $(SHELL)

SRC = ..
GTK_SRC = $(SRC)/..
GLISH_SRC = $(GTK_SRC)/../..

top = @top_srcdir@@top_off@
INCDIR_P = $(top)/include
LIBDIR_P = $(top)/lib/$(ARCH)
BINDIR_P = $(top)/bin/$(ARCH)
SCRIPTDIR_P = $(top)/share/glish

prefix = @prefix@
exec_prefix = @exec_prefix@
INCDIR = @includedir@
LIBDIR = @libdir@
BINDIR = @bindir@
SCRIPTDIR = @SCRIPTDIR@

MKHIER = $(top)/config/mkhier


GLISH_LIBS = malloc.o $(LIBDIR_P)/libglish$(LIB_SUFFIX) $(LIBDIR_P)/libsos$(LIB_SUFFIX)
LIBS = $(CLIENT_LIBS) $(TK_LIB) @LIBS@

OBJS = main.o tkAgent.o tkCore.o tkCanvas.o malloc.o

RCDIR = @RCDIR@
TK_LIB = @TK_LIB@ 
DL_LIBS = @DL_LIBS@
XLIB = @XLIBSW@
XINC = @XINCLUDES@

INCLUDE = -I. -I$(SRC) -I$(GTK_SRC) -I$(GLISH_SRC) -I$(INCDIR_P) @TK_INCL@ $(XINC) $(PLUSINC)
CINCLUDE = -I. -I$(SRC) -I$(GTK_SRC) -I$(GLISH_SRC) -I$(INCDIR_P) @TK_INCL@ $(XINC)

OBJS = tkPgplot.o

CLIENTS = $(BINDIR_P)/gtk

INSTALLED_CLIENTS = $(BINDIR)/gtk

SCRIPTS = $(SCRIPTDIR_P)/gtk.g

INSTALLED_SCRIPTS = $(SCRIPTDIR)/gtk.g

TAR_FILE = gtk.tar

all: gPgplot.$(SUFFIX)

make-bindir_p:
	$(MKHIER) $(BINDIR_P)

make-bindir:
	$(MKHIER) $(BINDIR)

make-scriptdir_p:
	$(MKHIER) $(SCRIPTDIR_P)

make-scriptdir:
	$(MKHIER) $(SCRIPTDIR)

install:

tkPgplot.o: $(SRC)/tkPgplot.cc $(SRC)/tkPgplot.h $(GTK_SRC)/tkAgent.h $(GTK_SRC)/comdefs.h
	@if test -d $(SRC)/tkpgplot; then						\
	    echo $(CPLUS) $(INCLUDE) $(CXXFLAGS) -I$(SRC)/tkpgplot -c $(SRC)/tkPgplot.cc; \
	    $(CPLUS) $(INCLUDE) $(CXXFLAGS) -I$(SRC)/tkpgplot -c $(SRC)/tkPgplot.cc;	\
	else										\
	    echo $(CPLUS) $(INCLUDE) $(CXXFLAGS) -c $(SRC)/tkPgplot.cc;			\
	    $(CPLUS) $(INCLUDE) $(CXXFLAGS) -c $(SRC)/tkPgplot.cc;			\
	fi

gPgplot.$(SUFFIX): $(OBJS)
	@if test -d $(SRC)/tkpgplot; then							\
	    echo $(MK_LIB) gPgplot.$(SUFFIX) $(OBJS) -L$(SRC)/tkpgplot/$(ARCH) -ltkpgdrv $(LIBS) $(XLIB) $(DL_LIBS); \
	    $(MK_LIB) gPgplot.$(SUFFIX) $(OBJS) -L$(SRC)/tkpgplot/$(ARCH) -ltkpgdrv $(LIBS) $(XLIB) $(DL_LIBS); \
	else											\
	    echo $(MK_LIB) gPgplot.$(SUFFIX) $(OBJS) $(LIBS) $(XLIB) $(DL_LIBS);		\
	    $(MK_LIB) gPgplot.$(SUFFIX) $(OBJS) $(LIBS) $(XLIB) $(DL_LIBS);			\
	fi

tar:
	@rm -f $(TAR_FILE).Z tar-files
	@$(MAKE) $(MFLAGS) tar-list >tar-files
	tar cf $(TAR_FILE) -I tar-files
	compress $(TAR_FILE)
	@rm tar-files

tar-list:
	@echo glish >&2
	@ls Makefile.in config.h.in \
		COPYING glish.init mkinit.sh *.c *.cc *.h *.l *.y \
		*.sed doc/*.ps demos/*.g demos/*.cc demos/*.c \
		demos/README* include/Glish/*.h | grep -v '^config.h$$'
	@cd clients; $(MAKE) $(MFLAGS) tar-list | sed 's,^,clients/,'

rcsinfo:
	@echo glish
	@rlog -L -S RCS/*,v
	@echo glish/include/Glish
	@cd include/Glish; rlog -L -S RCS/*,v
	@cd clients; $(MAKE) $(MFLAGS) rcsinfo

clean:
	@rm -f $(CLIENT_OBJS) $(CLIENT_OBJS_PROXY) $(INTERP_OBJS) $(INTERP_OBJS_PROXY) \
			libglishp$(LIB_SUFFIX) libglish$(LIB_SUFFIX) main.o glish errs \
			parse.cc y.tab.h glish_init.cc scan.cc ../$(TAR_FILE).Z

distclean: clean
	rm -f config.status config.cache config.h config_p.h Makefile

INSTALL_:

